version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=061051230050.dkr.ecr.us-east-1.amazonaws.com/tekarch/boacicdrepo1
      - aws ecr get-login-password --region us-east-1 --debug | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo "Setting up build metadata..."
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo Granting execution permissions to Gradle wrapper...
      - echo Cleaning up previous builds...
      - echo "Running Gradle build for all microservices..."
      - cd user-management-service && ./gradlew clean build && cd ..
      - cd account-service && ./gradlew clean build && cd ..
      - cd fund-transfer-service && ./gradlew clean build && cd ..


  build:
    commands:
      - echo "Building Docker images for all services..."
      - docker-compose -f docker-compose.yml build
      - echo "Tagging root image..."
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker images to Amazon ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Generating imagedefinitions.json..."
      - printf '[{"name":"boacicdrepo","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Build and push completed successfully."


artifacts:
  files:
    - imagedefinitions.json
    - user-management-service/build/libs/*
    - account-service/build/libs/*
    - fund-transfer-service/build/libs/*
  discard-paths: yes

cache:
  paths:
    - ~/.gradle/caches/**
    - ~/.gradle/wrapper/**